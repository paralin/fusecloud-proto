// Code generated by protoc-gen-gogo.
// source: github.com/fuserobotics/proto/timesync/timesync-service.proto
// DO NOT EDIT!

/*
Package timesync is a generated protocol buffer package.

It is generated from these files:
	github.com/fuserobotics/proto/timesync/timesync-service.proto

It has these top-level messages:
	GetUnixTimeRequest
	GetUnixTimeResponse
*/
package timesync

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.GoGoProtoPackageIsVersion1

type GetUnixTimeRequest struct {
}

func (m *GetUnixTimeRequest) Reset()         { *m = GetUnixTimeRequest{} }
func (m *GetUnixTimeRequest) String() string { return proto.CompactTextString(m) }
func (*GetUnixTimeRequest) ProtoMessage()    {}
func (*GetUnixTimeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorTimesyncService, []int{0}
}

type GetUnixTimeResponse struct {
	Time uint32 `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
}

func (m *GetUnixTimeResponse) Reset()         { *m = GetUnixTimeResponse{} }
func (m *GetUnixTimeResponse) String() string { return proto.CompactTextString(m) }
func (*GetUnixTimeResponse) ProtoMessage()    {}
func (*GetUnixTimeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptorTimesyncService, []int{1}
}

func init() {
	proto.RegisterType((*GetUnixTimeRequest)(nil), "timesync.GetUnixTimeRequest")
	proto.RegisterType((*GetUnixTimeResponse)(nil), "timesync.GetUnixTimeResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for TimeSyncService service

type TimeSyncServiceClient interface {
	GetUnixTime(ctx context.Context, in *GetUnixTimeRequest, opts ...grpc.CallOption) (*GetUnixTimeResponse, error)
}

type timeSyncServiceClient struct {
	cc *grpc.ClientConn
}

func NewTimeSyncServiceClient(cc *grpc.ClientConn) TimeSyncServiceClient {
	return &timeSyncServiceClient{cc}
}

func (c *timeSyncServiceClient) GetUnixTime(ctx context.Context, in *GetUnixTimeRequest, opts ...grpc.CallOption) (*GetUnixTimeResponse, error) {
	out := new(GetUnixTimeResponse)
	err := grpc.Invoke(ctx, "/timesync.TimeSyncService/GetUnixTime", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for TimeSyncService service

type TimeSyncServiceServer interface {
	GetUnixTime(context.Context, *GetUnixTimeRequest) (*GetUnixTimeResponse, error)
}

func RegisterTimeSyncServiceServer(s *grpc.Server, srv TimeSyncServiceServer) {
	s.RegisterService(&_TimeSyncService_serviceDesc, srv)
}

func _TimeSyncService_GetUnixTime_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUnixTimeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TimeSyncServiceServer).GetUnixTime(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/timesync.TimeSyncService/GetUnixTime",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TimeSyncServiceServer).GetUnixTime(ctx, req.(*GetUnixTimeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TimeSyncService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "timesync.TimeSyncService",
	HandlerType: (*TimeSyncServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUnixTime",
			Handler:    _TimeSyncService_GetUnixTime_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptorTimesyncService,
}

var fileDescriptorTimesyncService = []byte{
	// 165 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xb2, 0x4d, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0x4f, 0x2b, 0x2d, 0x4e, 0x2d, 0xca, 0x4f, 0xca, 0x2f,
	0xc9, 0x4c, 0x2e, 0xd6, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x2f, 0xc9, 0xcc, 0x4d, 0x2d, 0xae,
	0xcc, 0x4b, 0x86, 0x33, 0x74, 0x81, 0x4a, 0xca, 0x32, 0x93, 0x53, 0xf5, 0xc0, 0xf2, 0x42, 0x1c,
	0x30, 0x71, 0x25, 0x11, 0x2e, 0x21, 0xf7, 0xd4, 0x92, 0xd0, 0xbc, 0xcc, 0x8a, 0x10, 0xa0, 0x50,
	0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x92, 0x26, 0x97, 0x30, 0x8a, 0x68, 0x71, 0x41, 0x7e,
	0x5e, 0x71, 0xaa, 0x90, 0x10, 0x17, 0x0b, 0x48, 0xa3, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x6f, 0x10,
	0x98, 0x6d, 0x14, 0xcb, 0xc5, 0x0f, 0x52, 0x13, 0x0c, 0x34, 0x2c, 0x18, 0x62, 0x87, 0x90, 0x17,
	0x17, 0x37, 0x92, 0x6e, 0x21, 0x19, 0x3d, 0x98, 0x6d, 0x7a, 0x98, 0x56, 0x49, 0xc9, 0xe2, 0x90,
	0x85, 0x58, 0x99, 0xc4, 0x06, 0x76, 0xb0, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xff, 0x5f, 0x8e,
	0x7c, 0xf1, 0x00, 0x00, 0x00,
}
