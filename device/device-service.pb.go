// Code generated by protoc-gen-go.
// source: github.com/fuserobotics/proto/device/device-service.proto
// DO NOT EDIT!

/*
Package device is a generated protocol buffer package.

It is generated from these files:
	github.com/fuserobotics/proto/device/device-service.proto
	github.com/fuserobotics/proto/device/device.proto

It has these top-level messages:
	ListDevicesRequest
	ListDevicesResponse
	CreateDeviceRequest
	CreateDeviceResponse
	SaveDeviceRequest
	SaveDeviceResponse
	GetDeviceRequest
	GetDeviceResponse
	CheckBootstrapperExistsRequest
	CheckBootstrapperExistsResponse
	Device
	DeviceNetworkTemplate
*/
package device

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/fuserobotics/proto/common"
import identify "github.com/fuserobotics/proto/identify"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ListDevicesRequest struct {
	Identify *identify.Identify `protobuf:"bytes,1,opt,name=identify" json:"identify,omitempty"`
	Region   string             `protobuf:"bytes,2,opt,name=region" json:"region,omitempty"`
}

func (m *ListDevicesRequest) Reset()                    { *m = ListDevicesRequest{} }
func (m *ListDevicesRequest) String() string            { return proto.CompactTextString(m) }
func (*ListDevicesRequest) ProtoMessage()               {}
func (*ListDevicesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ListDevicesRequest) GetIdentify() *identify.Identify {
	if m != nil {
		return m.Identify
	}
	return nil
}

func (m *ListDevicesRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

type ListDevicesResponse struct {
	Device []*Device `protobuf:"bytes,1,rep,name=device" json:"device,omitempty"`
}

func (m *ListDevicesResponse) Reset()                    { *m = ListDevicesResponse{} }
func (m *ListDevicesResponse) String() string            { return proto.CompactTextString(m) }
func (*ListDevicesResponse) ProtoMessage()               {}
func (*ListDevicesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ListDevicesResponse) GetDevice() []*Device {
	if m != nil {
		return m.Device
	}
	return nil
}

type CreateDeviceRequest struct {
	Identify *identify.Identify `protobuf:"bytes,1,opt,name=identify" json:"identify,omitempty"`
	Device   *Device            `protobuf:"bytes,2,opt,name=device" json:"device,omitempty"`
	Region   string             `protobuf:"bytes,3,opt,name=region" json:"region,omitempty"`
}

func (m *CreateDeviceRequest) Reset()                    { *m = CreateDeviceRequest{} }
func (m *CreateDeviceRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateDeviceRequest) ProtoMessage()               {}
func (*CreateDeviceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateDeviceRequest) GetIdentify() *identify.Identify {
	if m != nil {
		return m.Identify
	}
	return nil
}

func (m *CreateDeviceRequest) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *CreateDeviceRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

type CreateDeviceResponse struct {
	CreatedDevice *Device `protobuf:"bytes,1,opt,name=created_device,json=createdDevice" json:"created_device,omitempty"`
}

func (m *CreateDeviceResponse) Reset()                    { *m = CreateDeviceResponse{} }
func (m *CreateDeviceResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateDeviceResponse) ProtoMessage()               {}
func (*CreateDeviceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CreateDeviceResponse) GetCreatedDevice() *Device {
	if m != nil {
		return m.CreatedDevice
	}
	return nil
}

type SaveDeviceRequest struct {
	Identify        *identify.Identify            `protobuf:"bytes,1,opt,name=identify" json:"identify,omitempty"`
	Hostname        string                        `protobuf:"bytes,2,opt,name=hostname" json:"hostname,omitempty"`
	Region          string                        `protobuf:"bytes,3,opt,name=region" json:"region,omitempty"`
	NetworkSettings *Device_DeviceNetworkSettings `protobuf:"bytes,4,opt,name=network_settings,json=networkSettings" json:"network_settings,omitempty"`
}

func (m *SaveDeviceRequest) Reset()                    { *m = SaveDeviceRequest{} }
func (m *SaveDeviceRequest) String() string            { return proto.CompactTextString(m) }
func (*SaveDeviceRequest) ProtoMessage()               {}
func (*SaveDeviceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *SaveDeviceRequest) GetIdentify() *identify.Identify {
	if m != nil {
		return m.Identify
	}
	return nil
}

func (m *SaveDeviceRequest) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *SaveDeviceRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *SaveDeviceRequest) GetNetworkSettings() *Device_DeviceNetworkSettings {
	if m != nil {
		return m.NetworkSettings
	}
	return nil
}

type SaveDeviceResponse struct {
	Changed bool `protobuf:"varint,1,opt,name=changed" json:"changed,omitempty"`
}

func (m *SaveDeviceResponse) Reset()                    { *m = SaveDeviceResponse{} }
func (m *SaveDeviceResponse) String() string            { return proto.CompactTextString(m) }
func (*SaveDeviceResponse) ProtoMessage()               {}
func (*SaveDeviceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *SaveDeviceResponse) GetChanged() bool {
	if m != nil {
		return m.Changed
	}
	return false
}

type GetDeviceRequest struct {
	Identify *identify.Identify `protobuf:"bytes,1,opt,name=identify" json:"identify,omitempty"`
	Hostname string             `protobuf:"bytes,2,opt,name=hostname" json:"hostname,omitempty"`
	Region   string             `protobuf:"bytes,3,opt,name=region" json:"region,omitempty"`
}

func (m *GetDeviceRequest) Reset()                    { *m = GetDeviceRequest{} }
func (m *GetDeviceRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDeviceRequest) ProtoMessage()               {}
func (*GetDeviceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GetDeviceRequest) GetIdentify() *identify.Identify {
	if m != nil {
		return m.Identify
	}
	return nil
}

func (m *GetDeviceRequest) GetHostname() string {
	if m != nil {
		return m.Hostname
	}
	return ""
}

func (m *GetDeviceRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

type GetDeviceResponse struct {
	Device *Device `protobuf:"bytes,1,opt,name=device" json:"device,omitempty"`
}

func (m *GetDeviceResponse) Reset()                    { *m = GetDeviceResponse{} }
func (m *GetDeviceResponse) String() string            { return proto.CompactTextString(m) }
func (*GetDeviceResponse) ProtoMessage()               {}
func (*GetDeviceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GetDeviceResponse) GetDevice() *Device {
	if m != nil {
		return m.Device
	}
	return nil
}

type CheckBootstrapperExistsRequest struct {
	Identify *identify.Identify `protobuf:"bytes,1,opt,name=identify" json:"identify,omitempty"`
	Region   string             `protobuf:"bytes,2,opt,name=region" json:"region,omitempty"`
}

func (m *CheckBootstrapperExistsRequest) Reset()                    { *m = CheckBootstrapperExistsRequest{} }
func (m *CheckBootstrapperExistsRequest) String() string            { return proto.CompactTextString(m) }
func (*CheckBootstrapperExistsRequest) ProtoMessage()               {}
func (*CheckBootstrapperExistsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *CheckBootstrapperExistsRequest) GetIdentify() *identify.Identify {
	if m != nil {
		return m.Identify
	}
	return nil
}

func (m *CheckBootstrapperExistsRequest) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

type CheckBootstrapperExistsResponse struct {
	ChangesMade bool `protobuf:"varint,1,opt,name=changes_made,json=changesMade" json:"changes_made,omitempty"`
}

func (m *CheckBootstrapperExistsResponse) Reset()                    { *m = CheckBootstrapperExistsResponse{} }
func (m *CheckBootstrapperExistsResponse) String() string            { return proto.CompactTextString(m) }
func (*CheckBootstrapperExistsResponse) ProtoMessage()               {}
func (*CheckBootstrapperExistsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *CheckBootstrapperExistsResponse) GetChangesMade() bool {
	if m != nil {
		return m.ChangesMade
	}
	return false
}

func init() {
	proto.RegisterType((*ListDevicesRequest)(nil), "device.ListDevicesRequest")
	proto.RegisterType((*ListDevicesResponse)(nil), "device.ListDevicesResponse")
	proto.RegisterType((*CreateDeviceRequest)(nil), "device.CreateDeviceRequest")
	proto.RegisterType((*CreateDeviceResponse)(nil), "device.CreateDeviceResponse")
	proto.RegisterType((*SaveDeviceRequest)(nil), "device.SaveDeviceRequest")
	proto.RegisterType((*SaveDeviceResponse)(nil), "device.SaveDeviceResponse")
	proto.RegisterType((*GetDeviceRequest)(nil), "device.GetDeviceRequest")
	proto.RegisterType((*GetDeviceResponse)(nil), "device.GetDeviceResponse")
	proto.RegisterType((*CheckBootstrapperExistsRequest)(nil), "device.CheckBootstrapperExistsRequest")
	proto.RegisterType((*CheckBootstrapperExistsResponse)(nil), "device.CheckBootstrapperExistsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for GlobalDeviceService service

type GlobalDeviceServiceClient interface {
	ListDevices(ctx context.Context, in *ListDevicesRequest, opts ...grpc.CallOption) (*ListDevicesResponse, error)
	CreateDevice(ctx context.Context, in *CreateDeviceRequest, opts ...grpc.CallOption) (*CreateDeviceResponse, error)
	SaveDevice(ctx context.Context, in *SaveDeviceRequest, opts ...grpc.CallOption) (*SaveDeviceResponse, error)
	GetDevice(ctx context.Context, in *GetDeviceRequest, opts ...grpc.CallOption) (*GetDeviceResponse, error)
}

type globalDeviceServiceClient struct {
	cc *grpc.ClientConn
}

func NewGlobalDeviceServiceClient(cc *grpc.ClientConn) GlobalDeviceServiceClient {
	return &globalDeviceServiceClient{cc}
}

func (c *globalDeviceServiceClient) ListDevices(ctx context.Context, in *ListDevicesRequest, opts ...grpc.CallOption) (*ListDevicesResponse, error) {
	out := new(ListDevicesResponse)
	err := grpc.Invoke(ctx, "/device.GlobalDeviceService/ListDevices", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalDeviceServiceClient) CreateDevice(ctx context.Context, in *CreateDeviceRequest, opts ...grpc.CallOption) (*CreateDeviceResponse, error) {
	out := new(CreateDeviceResponse)
	err := grpc.Invoke(ctx, "/device.GlobalDeviceService/CreateDevice", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalDeviceServiceClient) SaveDevice(ctx context.Context, in *SaveDeviceRequest, opts ...grpc.CallOption) (*SaveDeviceResponse, error) {
	out := new(SaveDeviceResponse)
	err := grpc.Invoke(ctx, "/device.GlobalDeviceService/SaveDevice", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *globalDeviceServiceClient) GetDevice(ctx context.Context, in *GetDeviceRequest, opts ...grpc.CallOption) (*GetDeviceResponse, error) {
	out := new(GetDeviceResponse)
	err := grpc.Invoke(ctx, "/device.GlobalDeviceService/GetDevice", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GlobalDeviceService service

type GlobalDeviceServiceServer interface {
	ListDevices(context.Context, *ListDevicesRequest) (*ListDevicesResponse, error)
	CreateDevice(context.Context, *CreateDeviceRequest) (*CreateDeviceResponse, error)
	SaveDevice(context.Context, *SaveDeviceRequest) (*SaveDeviceResponse, error)
	GetDevice(context.Context, *GetDeviceRequest) (*GetDeviceResponse, error)
}

func RegisterGlobalDeviceServiceServer(s *grpc.Server, srv GlobalDeviceServiceServer) {
	s.RegisterService(&_GlobalDeviceService_serviceDesc, srv)
}

func _GlobalDeviceService_ListDevices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDevicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalDeviceServiceServer).ListDevices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/device.GlobalDeviceService/ListDevices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalDeviceServiceServer).ListDevices(ctx, req.(*ListDevicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalDeviceService_CreateDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalDeviceServiceServer).CreateDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/device.GlobalDeviceService/CreateDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalDeviceServiceServer).CreateDevice(ctx, req.(*CreateDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalDeviceService_SaveDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SaveDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalDeviceServiceServer).SaveDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/device.GlobalDeviceService/SaveDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalDeviceServiceServer).SaveDevice(ctx, req.(*SaveDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GlobalDeviceService_GetDevice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDeviceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GlobalDeviceServiceServer).GetDevice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/device.GlobalDeviceService/GetDevice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GlobalDeviceServiceServer).GetDevice(ctx, req.(*GetDeviceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GlobalDeviceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "device.GlobalDeviceService",
	HandlerType: (*GlobalDeviceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListDevices",
			Handler:    _GlobalDeviceService_ListDevices_Handler,
		},
		{
			MethodName: "CreateDevice",
			Handler:    _GlobalDeviceService_CreateDevice_Handler,
		},
		{
			MethodName: "SaveDevice",
			Handler:    _GlobalDeviceService_SaveDevice_Handler,
		},
		{
			MethodName: "GetDevice",
			Handler:    _GlobalDeviceService_GetDevice_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github.com/fuserobotics/proto/device/device-service.proto",
}

func init() {
	proto.RegisterFile("github.com/fuserobotics/proto/device/device-service.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 502 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x54, 0xdb, 0x6e, 0xd3, 0x4c,
	0x10, 0x96, 0xd3, 0x5f, 0xf9, 0xd3, 0x49, 0x29, 0xed, 0x06, 0x21, 0x77, 0x41, 0x10, 0x2c, 0x84,
	0x72, 0x83, 0xa3, 0x06, 0xf5, 0x02, 0x21, 0x24, 0x44, 0x0a, 0x55, 0x25, 0x0a, 0x92, 0x73, 0x8b,
	0x14, 0x39, 0xf6, 0x34, 0x5e, 0xb5, 0xde, 0x0d, 0xde, 0x4d, 0x80, 0x07, 0xe0, 0x79, 0x78, 0x0d,
	0x1e, 0x0b, 0xe1, 0x1d, 0xbb, 0x36, 0x75, 0x22, 0x71, 0x10, 0x57, 0xe3, 0x99, 0xf9, 0xe6, 0xf0,
	0x8d, 0x67, 0x16, 0x9e, 0xce, 0x85, 0x49, 0x96, 0x33, 0x3f, 0x52, 0xe9, 0xf0, 0x7c, 0xa9, 0x31,
	0x53, 0x33, 0x65, 0x44, 0xa4, 0x87, 0x8b, 0x4c, 0x19, 0x35, 0x8c, 0x71, 0x25, 0x22, 0x24, 0xf1,
	0x58, 0x63, 0xf6, 0x43, 0xfa, 0xb9, 0x8f, 0xb5, 0xad, 0x95, 0x1f, 0x6e, 0x4e, 0x11, 0xa9, 0x34,
	0x55, 0x92, 0x84, 0x0d, 0xe5, 0x47, 0x9b, 0x43, 0x44, 0x8c, 0xd2, 0x88, 0xf3, 0xcf, 0xe5, 0x07,
	0x85, 0x1d, 0xfe, 0x42, 0xb3, 0x36, 0xc4, 0x7b, 0x0f, 0xec, 0x8d, 0xd0, 0xe6, 0x38, 0xb7, 0xe9,
	0x00, 0x3f, 0x2c, 0x51, 0x1b, 0xe6, 0x43, 0xa7, 0x48, 0xed, 0x3a, 0x7d, 0x67, 0xd0, 0x1d, 0x31,
	0xbf, 0xac, 0x75, 0x4a, 0x1f, 0x41, 0x89, 0x61, 0xb7, 0xa1, 0x9d, 0xe1, 0x5c, 0x28, 0xe9, 0xb6,
	0xfa, 0xce, 0x60, 0x3b, 0x20, 0xcd, 0x7b, 0x0e, 0xbd, 0x5a, 0x76, 0xbd, 0x50, 0x52, 0x23, 0x7b,
	0x04, 0x34, 0x1b, 0xd7, 0xe9, 0x6f, 0x0d, 0xba, 0xa3, 0x5d, 0x9f, 0x7a, 0xb2, 0xc0, 0x80, 0xbc,
	0xde, 0x17, 0x07, 0x7a, 0xe3, 0x0c, 0x43, 0x83, 0xe4, 0xf8, 0xcd, 0xf6, 0xae, 0xea, 0xb5, 0x72,
	0xf4, 0x9a, 0x7a, 0x15, 0x1a, 0x5b, 0x35, 0x1a, 0x67, 0x70, 0xab, 0xde, 0x06, 0xf1, 0x38, 0x82,
	0xdd, 0x28, 0xb7, 0xc7, 0xd3, 0x92, 0x4f, 0x53, 0xfe, 0x1b, 0x84, 0xb2, 0xaa, 0xf7, 0xcd, 0x81,
	0xfd, 0x49, 0xb8, 0xfa, 0x43, 0x52, 0x1c, 0x3a, 0x89, 0xd2, 0x46, 0x86, 0x29, 0xd2, 0xd4, 0x4b,
	0x7d, 0x1d, 0x11, 0xf6, 0x0e, 0xf6, 0x24, 0x9a, 0x8f, 0x2a, 0xbb, 0x98, 0x6a, 0x34, 0x46, 0xc8,
	0xb9, 0x76, 0xff, 0xcb, 0x6b, 0x3d, 0xac, 0xb7, 0x4c, 0xe2, 0xad, 0x05, 0x4f, 0x08, 0x1b, 0xdc,
	0x94, 0x75, 0x83, 0xe7, 0x03, 0xab, 0x32, 0xa1, 0xb9, 0xb8, 0xf0, 0x7f, 0x94, 0x84, 0x72, 0x8e,
	0x71, 0xce, 0xa4, 0x13, 0x14, 0xaa, 0xb7, 0x82, 0xbd, 0x13, 0x34, 0xff, 0x9c, 0xb8, 0xf7, 0x0c,
	0xf6, 0x2b, 0x75, 0x1b, 0xd6, 0x70, 0xc3, 0x5a, 0x78, 0x09, 0xdc, 0x1b, 0x27, 0x18, 0x5d, 0xbc,
	0x54, 0xca, 0x68, 0x93, 0x85, 0x8b, 0x05, 0x66, 0xaf, 0x3e, 0x09, 0x6d, 0xfe, 0xfa, 0xbd, 0x1c,
	0xc3, 0xfd, 0xb5, 0x95, 0xa8, 0xe9, 0x07, 0xb0, 0x63, 0x87, 0xa9, 0xa7, 0x69, 0x18, 0x23, 0x0d,
	0xb8, 0x4b, 0xb6, 0xb3, 0x30, 0xc6, 0xd1, 0xd7, 0x16, 0xf4, 0x4e, 0x2e, 0xd5, 0x2c, 0xbc, 0xb4,
	0x44, 0x26, 0xf6, 0x59, 0x62, 0xaf, 0xa1, 0x5b, 0xb9, 0x46, 0xc6, 0x0b, 0xba, 0xd7, 0x1f, 0x00,
	0x7e, 0xa7, 0xd1, 0x47, 0x2d, 0x9c, 0xc2, 0x4e, 0xf5, 0x1c, 0x58, 0x09, 0x6e, 0xb8, 0x55, 0x7e,
	0xb7, 0xd9, 0x49, 0xa9, 0xc6, 0x00, 0x57, 0xfb, 0xc3, 0x0e, 0x0a, 0xec, 0xb5, 0xeb, 0xe0, 0xbc,
	0xc9, 0x45, 0x49, 0x5e, 0xc0, 0x76, 0xf9, 0x73, 0x99, 0x5b, 0x00, 0x7f, 0xde, 0x33, 0x7e, 0xd0,
	0xe0, 0xb1, 0x19, 0x66, 0xed, 0xfc, 0x31, 0x7c, 0xf2, 0x3d, 0x00, 0x00, 0xff, 0xff, 0x87, 0x3e,
	0xc9, 0x1a, 0xee, 0x05, 0x00, 0x00,
}
