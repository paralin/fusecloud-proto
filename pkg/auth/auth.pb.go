// Code generated by protoc-gen-gogo.
// source: auth/auth.proto
// DO NOT EDIT!

/*
Package auth is a generated protocol buffer package.

It is generated from these files:
	auth/auth.proto

It has these top-level messages:
	User
	AuthWithPassword
	AuthWithPasswordSuccess
*/
package auth

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.GoGoProtoPackageIsVersion1

//
// User: a standard user with username, email, password
type User struct {
	Username string             `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string             `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Meta     *User_UserMetadata `protobuf:"bytes,3,opt,name=meta" json:"meta,omitempty"`
	// certificates, latest at index 0
	Cert []*User_UserCert `protobuf:"bytes,4,rep,name=cert" json:"cert,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptorAuth, []int{0} }

func (m *User) GetMeta() *User_UserMetadata {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *User) GetCert() []*User_UserCert {
	if m != nil {
		return m.Cert
	}
	return nil
}

type User_UserMetadata struct {
	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (m *User_UserMetadata) Reset()                    { *m = User_UserMetadata{} }
func (m *User_UserMetadata) String() string            { return proto.CompactTextString(m) }
func (*User_UserMetadata) ProtoMessage()               {}
func (*User_UserMetadata) Descriptor() ([]byte, []int) { return fileDescriptorAuth, []int{0, 0} }

type User_UserCert struct {
	Cert string `protobuf:"bytes,1,opt,name=cert,proto3" json:"cert,omitempty"`
	Pkey string `protobuf:"bytes,2,opt,name=pkey,proto3" json:"pkey,omitempty"`
}

func (m *User_UserCert) Reset()                    { *m = User_UserCert{} }
func (m *User_UserCert) String() string            { return proto.CompactTextString(m) }
func (*User_UserCert) ProtoMessage()               {}
func (*User_UserCert) Descriptor() ([]byte, []int) { return fileDescriptorAuth, []int{0, 1} }

//
// AuthWithPassword: auth attempt with password
// where sha256() returns lowercase, 64 char hex string
// Password is: sha256(timestamp + sha256(sha256(username) + plaintext password))
type AuthWithPassword struct {
	Username  string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password  string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Timestamp int32  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (m *AuthWithPassword) Reset()                    { *m = AuthWithPassword{} }
func (m *AuthWithPassword) String() string            { return proto.CompactTextString(m) }
func (*AuthWithPassword) ProtoMessage()               {}
func (*AuthWithPassword) Descriptor() ([]byte, []int) { return fileDescriptorAuth, []int{1} }

type AuthWithPasswordSuccess struct {
	Cert *User_UserCert     `protobuf:"bytes,1,opt,name=cert" json:"cert,omitempty"`
	Meta *User_UserMetadata `protobuf:"bytes,2,opt,name=meta" json:"meta,omitempty"`
}

func (m *AuthWithPasswordSuccess) Reset()                    { *m = AuthWithPasswordSuccess{} }
func (m *AuthWithPasswordSuccess) String() string            { return proto.CompactTextString(m) }
func (*AuthWithPasswordSuccess) ProtoMessage()               {}
func (*AuthWithPasswordSuccess) Descriptor() ([]byte, []int) { return fileDescriptorAuth, []int{2} }

func (m *AuthWithPasswordSuccess) GetCert() *User_UserCert {
	if m != nil {
		return m.Cert
	}
	return nil
}

func (m *AuthWithPasswordSuccess) GetMeta() *User_UserMetadata {
	if m != nil {
		return m.Meta
	}
	return nil
}

func init() {
	proto.RegisterType((*User)(nil), "auth.User")
	proto.RegisterType((*User_UserMetadata)(nil), "auth.User.UserMetadata")
	proto.RegisterType((*User_UserCert)(nil), "auth.User.UserCert")
	proto.RegisterType((*AuthWithPassword)(nil), "auth.AuthWithPassword")
	proto.RegisterType((*AuthWithPasswordSuccess)(nil), "auth.AuthWithPasswordSuccess")
}

var fileDescriptorAuth = []byte{
	// 260 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0x2c, 0x2d, 0xc9,
	0xd0, 0x07, 0x11, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x2c, 0x20, 0xb6, 0x52, 0x13, 0x13,
	0x17, 0x4b, 0x68, 0x71, 0x6a, 0x91, 0x90, 0x14, 0x17, 0x47, 0x29, 0x90, 0xce, 0x4b, 0xcc, 0x4d,
	0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0xf3, 0x41, 0x72, 0x05, 0x89, 0xc5, 0xc5, 0xe5,
	0xf9, 0x45, 0x29, 0x12, 0x4c, 0x10, 0x39, 0x18, 0x5f, 0x48, 0x9b, 0x8b, 0x25, 0x37, 0xb5, 0x24,
	0x51, 0x82, 0x19, 0x28, 0xce, 0x6d, 0x24, 0xae, 0x07, 0xb6, 0x01, 0x64, 0x22, 0x98, 0xf0, 0x05,
	0x4a, 0xa5, 0x24, 0x96, 0x24, 0x06, 0x81, 0x15, 0x09, 0xa9, 0x73, 0xb1, 0x24, 0xa7, 0x16, 0x95,
	0x48, 0xb0, 0x28, 0x30, 0x03, 0x15, 0x0b, 0xa3, 0x29, 0x76, 0x06, 0x4a, 0x05, 0x81, 0x15, 0x48,
	0x59, 0x70, 0xf1, 0x20, 0x6b, 0x17, 0x12, 0xe2, 0x62, 0x41, 0x72, 0x19, 0x98, 0x2d, 0x24, 0xc2,
	0xc5, 0x9a, 0x9a, 0x9b, 0x98, 0x99, 0x03, 0x75, 0x12, 0x84, 0x23, 0x65, 0xc4, 0xc5, 0x01, 0x33,
	0x0b, 0xa4, 0x0b, 0x6c, 0x1d, 0x54, 0x57, 0x32, 0x54, 0xac, 0x20, 0x3b, 0xb5, 0x12, 0xaa, 0x09,
	0xcc, 0x56, 0xca, 0xe0, 0x12, 0x70, 0x04, 0xba, 0x24, 0x3c, 0xb3, 0x24, 0x23, 0x00, 0xe6, 0x2f,
	0x72, 0xc3, 0x43, 0x86, 0x8b, 0xb3, 0x24, 0x33, 0x37, 0xb5, 0xb8, 0x24, 0x31, 0xb7, 0x00, 0x1c,
	0x28, 0xac, 0x41, 0x08, 0x01, 0xa5, 0x7c, 0x2e, 0x71, 0x74, 0x9b, 0x82, 0x4b, 0x93, 0x93, 0x53,
	0x8b, 0x8b, 0xe1, 0x61, 0xc3, 0x08, 0x0e, 0x48, 0xdc, 0x61, 0x03, 0x0f, 0x71, 0x26, 0x22, 0x42,
	0x3c, 0x89, 0x0d, 0x1c, 0xd9, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x3d, 0x6b, 0xd9, 0xdb,
	0xff, 0x01, 0x00, 0x00,
}
