// Code generated by protoc-gen-gogo.
// source: region/region.proto
// DO NOT EDIT!

/*
Package region is a generated protocol buffer package.

It is generated from these files:
	region/region.proto

It has these top-level messages:
	Region
*/
package region

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import common "github.com/synrobo/proto/pkg/common"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.GoGoProtoPackageIsVersion1

//
// Region: a self contained, isolated, installation with IP ranges.
type Region struct {
	// slug / ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Human readable name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// IP range for devices
	IpRange *common.IPRange `protobuf:"bytes,3,opt,name=ip_range,json=ipRange" json:"ip_range,omitempty"`
}

func (m *Region) Reset()                    { *m = Region{} }
func (m *Region) String() string            { return proto.CompactTextString(m) }
func (*Region) ProtoMessage()               {}
func (*Region) Descriptor() ([]byte, []int) { return fileDescriptorRegion, []int{0} }

func (m *Region) GetIpRange() *common.IPRange {
	if m != nil {
		return m.IpRange
	}
	return nil
}

func init() {
	proto.RegisterType((*Region)(nil), "region.Region")
}

var fileDescriptorRegion = []byte{
	// 129 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0x2e, 0x4a, 0x4d, 0xcf,
	0xcc, 0xcf, 0xd3, 0x87, 0x50, 0x7a, 0x05, 0x45, 0xf9, 0x25, 0xf9, 0x42, 0x6c, 0x10, 0x9e, 0x94,
	0x70, 0x72, 0x7e, 0x6e, 0x2e, 0x50, 0x12, 0x42, 0x41, 0x24, 0x95, 0x22, 0xb8, 0xd8, 0x82, 0xc0,
	0xd2, 0x42, 0x7c, 0x5c, 0x4c, 0x99, 0x29, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x40, 0x96,
	0x90, 0x10, 0x17, 0x4b, 0x5e, 0x62, 0x6e, 0xaa, 0x04, 0x13, 0x58, 0x04, 0xcc, 0x16, 0xd2, 0xe2,
	0xe2, 0xc8, 0x2c, 0x88, 0x2f, 0x4a, 0xcc, 0x4b, 0x4f, 0x95, 0x60, 0x06, 0x8a, 0x73, 0x1b, 0xf1,
	0xeb, 0x41, 0x8d, 0xf3, 0x0c, 0x08, 0x02, 0x09, 0x07, 0xb1, 0x67, 0x16, 0x80, 0x19, 0x49, 0x6c,
	0x60, 0x0b, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x99, 0x59, 0xc7, 0xa2, 0x94, 0x00, 0x00,
	0x00,
}
