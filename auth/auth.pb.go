// Code generated by protoc-gen-go.
// source: github.com/fuserobotics/proto/auth/auth.proto
// DO NOT EDIT!

/*
Package auth is a generated protocol buffer package.

It is generated from these files:
	github.com/fuserobotics/proto/auth/auth.proto

It has these top-level messages:
	UserPublicIdentity
	UserPrivateData
*/
package auth

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "github.com/fuserobotics/proto/common"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// *
// UserPublicIdentity: public identity for a user.
type UserPublicIdentity struct {
	Username  string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	PublicKey string `protobuf:"bytes,2,opt,name=public_key,json=publicKey" json:"public_key,omitempty"`
	// certificates, latest at index 0
	Cert []*common.CertChain `protobuf:"bytes,3,rep,name=cert" json:"cert,omitempty"`
}

func (m *UserPublicIdentity) Reset()                    { *m = UserPublicIdentity{} }
func (m *UserPublicIdentity) String() string            { return proto.CompactTextString(m) }
func (*UserPublicIdentity) ProtoMessage()               {}
func (*UserPublicIdentity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *UserPublicIdentity) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *UserPublicIdentity) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *UserPublicIdentity) GetCert() []*common.CertChain {
	if m != nil {
		return m.Cert
	}
	return nil
}

// *
// UserPrivateData: private data for a user.
type UserPrivateData struct {
	// sha256 of username+password plaintext
	// Probably insecure (brute forceable)
	// Suggest a better way to do this down the line.
	PasswordHash []byte `protobuf:"bytes,1,opt,name=password_hash,json=passwordHash,proto3" json:"password_hash,omitempty"`
	// Encrypted private key
	PrivateKey []byte `protobuf:"bytes,2,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
}

func (m *UserPrivateData) Reset()                    { *m = UserPrivateData{} }
func (m *UserPrivateData) String() string            { return proto.CompactTextString(m) }
func (*UserPrivateData) ProtoMessage()               {}
func (*UserPrivateData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *UserPrivateData) GetPasswordHash() []byte {
	if m != nil {
		return m.PasswordHash
	}
	return nil
}

func (m *UserPrivateData) GetPrivateKey() []byte {
	if m != nil {
		return m.PrivateKey
	}
	return nil
}

func init() {
	proto.RegisterType((*UserPublicIdentity)(nil), "auth.UserPublicIdentity")
	proto.RegisterType((*UserPrivateData)(nil), "auth.UserPrivateData")
}

func init() { proto.RegisterFile("github.com/fuserobotics/proto/auth/auth.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 235 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x8f, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0xa9, 0x2d, 0x62, 0xa7, 0x11, 0x71, 0x4f, 0xa1, 0x20, 0x96, 0x8a, 0xd0, 0x8b, 0x09,
	0xea, 0x23, 0xd4, 0x83, 0xd2, 0x8b, 0x04, 0xc4, 0x63, 0x99, 0x6c, 0x47, 0x77, 0xd1, 0x64, 0xc2,
	0xee, 0xa4, 0x92, 0xb7, 0x97, 0x4e, 0x62, 0x8f, 0x5e, 0x76, 0x77, 0xfe, 0x7f, 0x3f, 0x3e, 0x06,
	0xee, 0x3e, 0xbd, 0xb8, 0xb6, 0xcc, 0x2c, 0x57, 0xf9, 0x47, 0x1b, 0x29, 0x70, 0xc9, 0xe2, 0x6d,
	0xcc, 0x9b, 0xc0, 0xc2, 0x39, 0xb6, 0xe2, 0xf4, 0xc8, 0x74, 0x36, 0x93, 0xc3, 0x7b, 0x7e, 0xff,
	0x3f, 0x64, 0xb9, 0xaa, 0xb8, 0x1e, 0xae, 0x1e, 0x5c, 0xee, 0xc1, 0xbc, 0x45, 0x0a, 0xaf, 0x6d,
	0xf9, 0xed, 0xed, 0xcb, 0x8e, 0x6a, 0xf1, 0xd2, 0x99, 0x39, 0x9c, 0x1d, 0xf0, 0x1a, 0x2b, 0x4a,
	0x47, 0x8b, 0xd1, 0x6a, 0x5a, 0x1c, 0x67, 0x73, 0x05, 0xd0, 0xe8, 0xef, 0xed, 0x17, 0x75, 0xe9,
	0x89, 0xb6, 0xd3, 0x3e, 0xd9, 0x50, 0x67, 0x6e, 0x61, 0x62, 0x29, 0x48, 0x3a, 0x5e, 0x8c, 0x57,
	0xb3, 0x87, 0xcb, 0x6c, 0xb0, 0xad, 0x29, 0xc8, 0xda, 0xa1, 0xaf, 0x0b, 0xad, 0x97, 0xef, 0x70,
	0xa1, 0xde, 0xe0, 0xf7, 0x28, 0xf4, 0x84, 0x82, 0xe6, 0x06, 0xce, 0x1b, 0x8c, 0xf1, 0x87, 0xc3,
	0x6e, 0xeb, 0x30, 0x3a, 0x35, 0x27, 0x45, 0xf2, 0x17, 0x3e, 0x63, 0x74, 0xe6, 0x1a, 0x66, 0x4d,
	0xcf, 0x1c, 0xf5, 0x49, 0x01, 0x43, 0xb4, 0xa1, 0xae, 0x3c, 0xd5, 0xbd, 0x1e, 0x7f, 0x03, 0x00,
	0x00, 0xff, 0xff, 0xd0, 0x27, 0x78, 0x75, 0x41, 0x01, 0x00, 0x00,
}
