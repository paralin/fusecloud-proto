// Code generated by protoc-gen-gogo.
// source: github.com/fuserobotics/proto/auth/auth-service.proto
// DO NOT EDIT!

/*
Package auth is a generated protocol buffer package.

It is generated from these files:
	github.com/fuserobotics/proto/auth/auth-service.proto
	github.com/fuserobotics/proto/auth/auth.proto

It has these top-level messages:
	AuthWithPasswordRequest
	AuthWithPasswordResponse
	User
*/
package auth

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"
import permissions "github.com/fuserobotics/proto/permissions"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.GoGoProtoPackageIsVersion1

//
// AuthWithPassword: auth attempt with password
// where sha256() returns lowercase, 64 char hex string
// Password is: sha256(timestamp + sha256(sha256(username) + plaintext password))
type AuthWithPasswordRequest struct {
	Username  string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password  string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Timestamp int32  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (m *AuthWithPasswordRequest) Reset()         { *m = AuthWithPasswordRequest{} }
func (m *AuthWithPasswordRequest) String() string { return proto.CompactTextString(m) }
func (*AuthWithPasswordRequest) ProtoMessage()    {}
func (*AuthWithPasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptorAuthService, []int{0}
}

type AuthWithPasswordResponse struct {
	Cert                  *User_UserCert                            `protobuf:"bytes,1,opt,name=cert" json:"cert,omitempty"`
	Meta                  *User_UserMetadata                        `protobuf:"bytes,2,opt,name=meta" json:"meta,omitempty"`
	GlobalRole            *User_UserRoleSet                         `protobuf:"bytes,3,opt,name=global_role,json=globalRole" json:"global_role,omitempty"`
	RegionRole            map[string]*User_UserRoleSet              `protobuf:"bytes,4,rep,name=region_role,json=regionRole" json:"region_role,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value"`
	GlobalExtraPermission *permissions.SystemPermissions            `protobuf:"bytes,5,opt,name=global_extra_permission,json=globalExtraPermission" json:"global_extra_permission,omitempty"`
	RegionExtraPermission map[string]*permissions.SystemPermissions `protobuf:"bytes,6,rep,name=region_extra_permission,json=regionExtraPermission" json:"region_extra_permission,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *AuthWithPasswordResponse) Reset()         { *m = AuthWithPasswordResponse{} }
func (m *AuthWithPasswordResponse) String() string { return proto.CompactTextString(m) }
func (*AuthWithPasswordResponse) ProtoMessage()    {}
func (*AuthWithPasswordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptorAuthService, []int{1}
}

func (m *AuthWithPasswordResponse) GetCert() *User_UserCert {
	if m != nil {
		return m.Cert
	}
	return nil
}

func (m *AuthWithPasswordResponse) GetMeta() *User_UserMetadata {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *AuthWithPasswordResponse) GetGlobalRole() *User_UserRoleSet {
	if m != nil {
		return m.GlobalRole
	}
	return nil
}

func (m *AuthWithPasswordResponse) GetRegionRole() map[string]*User_UserRoleSet {
	if m != nil {
		return m.RegionRole
	}
	return nil
}

func (m *AuthWithPasswordResponse) GetGlobalExtraPermission() *permissions.SystemPermissions {
	if m != nil {
		return m.GlobalExtraPermission
	}
	return nil
}

func (m *AuthWithPasswordResponse) GetRegionExtraPermission() map[string]*permissions.SystemPermissions {
	if m != nil {
		return m.RegionExtraPermission
	}
	return nil
}

func init() {
	proto.RegisterType((*AuthWithPasswordRequest)(nil), "auth.AuthWithPasswordRequest")
	proto.RegisterType((*AuthWithPasswordResponse)(nil), "auth.AuthWithPasswordResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for AuthService service

type AuthServiceClient interface {
	AuthWithPassword(ctx context.Context, in *AuthWithPasswordRequest, opts ...grpc.CallOption) (*AuthWithPasswordResponse, error)
}

type authServiceClient struct {
	cc *grpc.ClientConn
}

func NewAuthServiceClient(cc *grpc.ClientConn) AuthServiceClient {
	return &authServiceClient{cc}
}

func (c *authServiceClient) AuthWithPassword(ctx context.Context, in *AuthWithPasswordRequest, opts ...grpc.CallOption) (*AuthWithPasswordResponse, error) {
	out := new(AuthWithPasswordResponse)
	err := grpc.Invoke(ctx, "/auth.AuthService/AuthWithPassword", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for AuthService service

type AuthServiceServer interface {
	AuthWithPassword(context.Context, *AuthWithPasswordRequest) (*AuthWithPasswordResponse, error)
}

func RegisterAuthServiceServer(s *grpc.Server, srv AuthServiceServer) {
	s.RegisterService(&_AuthService_serviceDesc, srv)
}

func _AuthService_AuthWithPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthWithPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).AuthWithPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.AuthService/AuthWithPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).AuthWithPassword(ctx, req.(*AuthWithPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "auth.AuthService",
	HandlerType: (*AuthServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AuthWithPassword",
			Handler:    _AuthService_AuthWithPassword_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptorAuthService,
}

var fileDescriptorAuthService = []byte{
	// 440 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x53, 0x5d, 0x6f, 0xd3, 0x30,
	0x14, 0x55, 0xd7, 0x64, 0x62, 0x37, 0x0f, 0x4c, 0x46, 0x23, 0x51, 0x04, 0xd3, 0xb4, 0x17, 0x90,
	0x60, 0xa9, 0x14, 0x40, 0x7c, 0x3d, 0x21, 0xb4, 0x47, 0xc4, 0x70, 0x35, 0x78, 0x1c, 0x4e, 0x76,
	0x69, 0x23, 0x92, 0x3a, 0xb3, 0x9d, 0x41, 0xff, 0x00, 0xbf, 0x1b, 0x7f, 0x84, 0x65, 0xa4, 0x4d,
	0xd7, 0x97, 0xc8, 0xbe, 0xe7, 0x9e, 0x7b, 0x8e, 0x8f, 0x63, 0x78, 0x35, 0x2b, 0xd4, 0xbc, 0xc9,
	0x92, 0x9c, 0x57, 0x93, 0x1f, 0x8d, 0x44, 0xc1, 0x33, 0xae, 0x8a, 0x5c, 0x4e, 0x6a, 0xc1, 0x15,
	0x9f, 0xb0, 0x46, 0xcd, 0xed, 0xe7, 0x44, 0x43, 0xd7, 0x45, 0x8e, 0x89, 0xad, 0x13, 0xcf, 0xd4,
	0xe2, 0x93, 0x2d, 0xc9, 0x8e, 0x14, 0xbf, 0xdf, 0xdc, 0x5e, 0xa3, 0xa8, 0x0a, 0x29, 0x0b, 0xbe,
	0x90, 0xb7, 0xd7, 0x8e, 0x7c, 0xcc, 0x21, 0xfc, 0xa0, 0x47, 0x7d, 0xd3, 0x23, 0xce, 0x98, 0x94,
	0xbf, 0xb8, 0xb8, 0xa4, 0x78, 0xd5, 0xa0, 0x54, 0x24, 0x86, 0x7b, 0x66, 0xda, 0x82, 0x55, 0x18,
	0x8d, 0x8e, 0x46, 0x4f, 0xf7, 0xe8, 0xcd, 0xde, 0x60, 0x75, 0xdb, 0x1e, 0xed, 0x38, 0xec, 0xdf,
	0x9e, 0x3c, 0x82, 0x3d, 0x55, 0x54, 0x7a, 0x02, 0xab, 0xea, 0x68, 0xac, 0x41, 0x9f, 0x76, 0x85,
	0xe3, 0x3f, 0x3e, 0x44, 0xab, 0x8a, 0xb2, 0xd6, 0x96, 0x90, 0x3c, 0x01, 0x2f, 0x47, 0xa1, 0xac,
	0x5c, 0x90, 0x3e, 0x48, 0xec, 0x29, 0xcf, 0xb5, 0xa8, 0xfd, 0x7c, 0xd4, 0x10, 0xb5, 0x0d, 0xe4,
	0x19, 0x78, 0x15, 0x2a, 0x66, 0xb5, 0x83, 0x34, 0xec, 0x35, 0x7e, 0xd2, 0xd0, 0x25, 0x53, 0x8c,
	0xda, 0x26, 0xf2, 0x1a, 0x82, 0x59, 0xc9, 0x33, 0x56, 0x5e, 0x08, 0x5e, 0xa2, 0xb5, 0x14, 0xa4,
	0x0f, 0x7b, 0x1c, 0xaa, 0xa1, 0x29, 0x2a, 0x0a, 0xae, 0xd5, 0x6c, 0xc9, 0x67, 0x08, 0x04, 0xce,
	0x74, 0x5a, 0x8e, 0xe8, 0x1d, 0x8d, 0x35, 0x31, 0x71, 0xc4, 0xa1, 0x33, 0x24, 0xd4, 0x32, 0x0c,
	0xff, 0x74, 0xa1, 0xc4, 0x92, 0x82, 0xb8, 0x29, 0x90, 0xaf, 0x10, 0xb6, 0x4e, 0xf0, 0xb7, 0x12,
	0xec, 0xa2, 0xbb, 0x8f, 0xc8, 0xb7, 0xae, 0x0e, 0x93, 0xdb, 0x57, 0x34, 0x5d, 0x4a, 0x85, 0xd5,
	0x59, 0x57, 0xa1, 0x07, 0x8e, 0x7e, 0x6a, 0xd8, 0x5d, 0x9d, 0x5c, 0x41, 0xd8, 0x1a, 0x5d, 0x99,
	0xbb, 0x6b, 0x4d, 0xbf, 0xdd, 0xca, 0x74, 0x6f, 0xac, 0xf3, 0x7f, 0x20, 0xd6, 0x61, 0xf1, 0x39,
	0xdc, 0xef, 0x9d, 0x94, 0xec, 0xc3, 0xf8, 0x27, 0x2e, 0xdb, 0x7f, 0xc5, 0x2c, 0xc9, 0x73, 0xf0,
	0xaf, 0x59, 0xd9, 0x60, 0x7b, 0x4f, 0x43, 0x99, 0xbb, 0xa6, 0x77, 0x3b, 0x6f, 0x46, 0xf1, 0x1c,
	0xe2, 0x61, 0x2f, 0x6b, 0x14, 0x5e, 0xfe, 0xaf, 0x70, 0x57, 0x7e, 0x9d, 0x52, 0xfa, 0x1d, 0x02,
	0x13, 0xc7, 0xd4, 0x3d, 0x40, 0xf2, 0x05, 0xf6, 0xfb, 0xe9, 0x90, 0xc7, 0x43, 0xa9, 0xd9, 0x07,
	0x12, 0x1f, 0x6e, 0x0e, 0x35, 0xdb, 0xb5, 0x4f, 0xec, 0xc5, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x96, 0xae, 0x42, 0x5d, 0x0d, 0x04, 0x00, 0x00,
}
